[
null,
{"id":1,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":1,"maxTurns":1,"message1":" has fallen!","message2":" is slain!","message3":"","message4":" revives!","minTurns":1,"motion":3,"name":"Knockout","note":"State #1 will be automatically added when\nHP reaches 0.\n<Custom Apply Effect>\nif (target.isActor()) {\n  var ring = $dataArmors[13];\n  if (target.hasArmor(ring)) {\n    target.discardEquip(ring);\n    target.startAnimation(42);\n    var hp = Math.floor(target.mhp * 0.25);\n    target.gainHp(hp);\n    target.startDamagePopup();\n  }\n}\n</Custom Apply Effect>","overlay":0,"priority":100,"releaseByDamage":false,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":23,"dataId":9,"value":0}]},
{"id":2,"autoRemovalTiming":2,"chanceByDamage":100,"description":"","iconIndex":81,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Guard","note":"","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":true,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":62,"dataId":1,"value":0}]},
{"id":3,"autoRemovalTiming":0,"chanceByDamage":100,"description":"","iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Immortal","note":"","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":14,"dataId":1,"value":0}]},
{"id":4,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":2,"maxTurns":1,"message1":" is poisoned!","message2":" is poisoned!","message3":"","message4":" is no longer poisoned!","minTurns":1,"motion":1,"overlay":1,"name":"Poison","note":"","priority":50,"releaseByDamage":false,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":7,"value":-0.1}]},
{"id":5,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":3,"maxTurns":5,"message1":" is blinded!","message2":" is blinded!","message3":"","message4":" is no longer blinded!","minTurns":3,"motion":1,"name":"Blind","note":"","overlay":2,"priority":60,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.5}]},
{"id":6,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":4,"maxTurns":5,"message1":" is silenced!","message2":" is silenced!","message3":"","message4":" is no longer silenced!","minTurns":3,"motion":1,"name":"Silence","note":"","overlay":3,"priority":65,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":42,"dataId":1,"value":0}]},
{"id":7,"autoRemovalTiming":1,"chanceByDamage":50,"iconIndex":5,"maxTurns":4,"message1":" is enraged!","message2":" is enraged!","message3":"","message4":" is no longer enraged!","minTurns":2,"motion":1,"name":"Rage","note":"","overlay":4,"priority":70,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":1,"stepsToRemove":100,"traits":[]},
{"id":8,"autoRemovalTiming":1,"chanceByDamage":50,"iconIndex":6,"maxTurns":4,"message1":" is confused!","message2":" is confused!","message3":"","message4":" is no longer confused!","minTurns":2,"motion":1,"name":"Confusion","note":"","overlay":5,"priority":75,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":2,"stepsToRemove":100,"traits":[]},
{"id":9,"autoRemovalTiming":1,"chanceByDamage":50,"iconIndex":7,"maxTurns":4,"message1":" is fascinated!","message2":" is fascinated!","message3":"","message4":" is no longer fascinated!","minTurns":2,"motion":1,"name":"Fascination","note":"","overlay":6,"priority":80,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":3,"stepsToRemove":100,"traits":[]},
{"id":10,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":8,"maxTurns":5,"message1":" falls asleep!","message2":" falls asleep!","message3":" is sleeping.","message4":" wakes up!","minTurns":3,"motion":2,"name":"Sleep","note":"","overlay":7,"priority":90,"releaseByDamage":true,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":22,"dataId":1,"value":-1}]},
{"id":11,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":22,"dataId":7,"value":0.01}],"iconIndex":70,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Blessing of Light","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":12,"autoRemovalTiming":2,"chanceByDamage":10,"traits":[{"code":14,"dataId":8,"value":1},{"code":11,"dataId":4,"value":0.5},{"code":11,"dataId":7,"value":0.5},{"code":21,"dataId":6,"value":1.2},{"code":31,"dataId":7,"value":1},{"code":61,"dataId":0,"value":0.5},{"code":61,"dataId":0,"value":0.3},{"code":33,"dataId":0,"value":10}],"iconIndex":69,"maxTurns":6,"message1":"unlocks the power of Aria!","message2":"","message3":"","message4":"returns to normal.","minTurns":6,"motion":0,"name":"One With the Wind","note":"<Custom Apply Effect>\n// Check if user is an actor.\nif (user.isActor()) {\n  // Archive the previous settings.\n  user._prevCharName = user._prevCharName || user._characterName;\n  user._prevCharIndex = user._prevCharIndex || user._characterIndex;\n  user._prevFaceName = user._prevFaceName || user._faceName;\n  user._prevFaceIndex = user._prevFaceIndex || user._faceIndex;\n  user._prevBattlerName = user._prevBattlerName || user._battlerName;\n  // Check if the actor ID is 5.\n  if (user.actorId() === 5) {\n    // The filename of the character graphic without the file extension.\n    var charName = 'Yuu';\n    // The index of the character graphic used.\n    var charIndex = 4;\n    // The filename of the face graphic without the file extension.\n    var faceName = 'Yuu';\n    // The index of of the face graphic used.\n    var faceIndex = 7;\n    // The filename of the battler graphic without the file extension.\n    var battlerName = 'Yuu Wind';\n  // Check if the actor ID is 2.\n  } else if (user.actorId() === 2) {\n    // The filename of the character graphic without the file extension.\n    var charName = 'ThereseSSJ';\n    // The index of the character graphic used.\n    var charIndex = 0;\n    // The filename of the face graphic without the file extension.\n    var faceName = 'ThereseSSJ';\n    // The index of of the face graphic used.\n    var faceIndex = 0;\n    // The filename of the battler graphic without the file extension.\n    var battlerName = 'Therese_SSJ1';\n  // Check if the actor ID is 3.\n  } else if (user.actorId() === 3) {\n    // The filename of the character graphic without the file extension.\n    var charName = 'MarshaSSJ';\n    // The index of the character graphic used.\n    var charIndex = 0;\n    // The filename of the face graphic without the file extension.\n    var faceName = 'MarshaSSJ';\n    // The index of of the face graphic used.\n    var faceIndex = 0;\n    // The filename of the battler graphic without the file extension.\n    var battlerName = 'Marsha_SSJ1';\n  // Check if the actor ID is 4.\n  } else if (user.actorId() === 4) {\n    // The filename of the character graphic without the file extension.\n    var charName = 'LuciusSSJ';\n    // The index of the character graphic used.\n    var charIndex = 0;\n    // The filename of the face graphic without the file extension.\n    var faceName = 'LuciusSSJ';\n    // The index of of the face graphic used.\n    var faceIndex = 0;\n    // The filename of the battler graphic without the file extension.\n    var battlerName = 'Lucius_SSJ1';\n  // If none of the above actor ID's match, use this setting.\n  } else {\n    // The filename of the character graphic without the file extension.\n    var charName = 'HaroldSSJ';\n    // The index of the character graphic used.\n    var charIndex = 0;\n    // The filename of the face graphic without the file extension.\n    var faceName = 'HaroldSSJ';\n    // The index of of the face graphic used.\n    var faceIndex = 0;\n    // The filename of the battler graphic without the file extension.\n    var battlerName = 'Harold_SSJ1';\n  }\n  // Changes the character image to the setting applied from above.\n  user.setCharacterImage(charName, charIndex);\n  // Changes the face image to the setting applied from above.\n  user.setFaceImage(faceName, faceIndex);\n  // Changes the battler image from the setting applied from above.\n  user.setBattlerImage(battlerName);\n  // Refreshes the user's appearance.\n  user.refresh();\n}\n</Custom Apply Effect>\n\n<Custom Remove Effect>\n// Retrieve archived settings.\nvar charName = user._prevCharName;\nvar charIndex = user._prevCharIndex;\nvar faceName = user._prevFaceName;\nvar faceIndex = user._prevFaceIndex;\nvar battlerName = user._prevBattlerName;\n// Changes the character image to the archived setting.\nuser.setCharacterImage(charName, charIndex);\n// Changes the face image to the archived setting.\nuser.setFaceImage(faceName, faceIndex);\n// Changes the battler image from the archived setting.\nuser.setBattlerImage(battlerName);\n// Clear archived data.\nuser._priorityCharacterName = undefined;\nuser._priorityCharacterIndex = undefined;\nuser._prevFaceName = undefined;\nuser._prevFaceIndex = undefined;\nuser._priorityFaceName = undefined;\nuser._priorityFaceIndex = undefined;\nuser._prevFaceName = undefined;\nuser._prevFaceIndex = undefined;\nuser._priorityBattlerName = undefined;\nuser._prevBattlerName = undefined;\n// Refreshes the user's appearance.\nuser.refresh();\n</Custom Remove Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":13,"autoRemovalTiming":1,"chanceByDamage":50,"iconIndex":5,"maxTurns":6,"message1":"unleashes her anger!","message2":"","message3":"","message4":"cools down.","minTurns":6,"motion":0,"name":"Wrath Unleashed","note":"<State Animation: 150>\n\n<Custom Apply Effect>\n// Check if user is an actor.\nif (user.isActor()) {\n  // Archive the previous settings.\n  user._prevCharName = user._prevCharName || user._characterName;\n  user._prevCharIndex = user._prevCharIndex || user._characterIndex;\n  user._prevFaceName = user._prevFaceName || user._faceName;\n  user._prevFaceIndex = user._prevFaceIndex || user._faceIndex;\n  user._prevBattlerName = user._prevBattlerName || user._battlerName;\n  // Check if the actor ID is 6.\n  if (user.actorId() === 6) {\n    // The filename of the character graphic without the file extension.\n    var charName = 'Mira';\n    // The index of the character graphic used.\n    var charIndex = 5;\n    // The filename of the face graphic without the file extension.\n    var faceName = 'Mira Maid';\n    // The index of of the face graphic used.\n    var faceIndex = 4;\n    // The filename of the battler graphic without the file extension.\n    var battlerName = 'Mira Wrath';\n  // Check if the actor ID is 2.\n  } else if (user.actorId() === 2) {\n    // The filename of the character graphic without the file extension.\n    var charName = 'ThereseSSJ';\n    // The index of the character graphic used.\n    var charIndex = 0;\n    // The filename of the face graphic without the file extension.\n    var faceName = 'ThereseSSJ';\n    // The index of of the face graphic used.\n    var faceIndex = 0;\n    // The filename of the battler graphic without the file extension.\n    var battlerName = 'Therese_SSJ1';\n  // Check if the actor ID is 3.\n  } else if (user.actorId() === 3) {\n    // The filename of the character graphic without the file extension.\n    var charName = 'MarshaSSJ';\n    // The index of the character graphic used.\n    var charIndex = 0;\n    // The filename of the face graphic without the file extension.\n    var faceName = 'MarshaSSJ';\n    // The index of of the face graphic used.\n    var faceIndex = 0;\n    // The filename of the battler graphic without the file extension.\n    var battlerName = 'Marsha_SSJ1';\n  // Check if the actor ID is 4.\n  } else if (user.actorId() === 4) {\n    // The filename of the character graphic without the file extension.\n    var charName = 'LuciusSSJ';\n    // The index of the character graphic used.\n    var charIndex = 0;\n    // The filename of the face graphic without the file extension.\n    var faceName = 'LuciusSSJ';\n    // The index of of the face graphic used.\n    var faceIndex = 0;\n    // The filename of the battler graphic without the file extension.\n    var battlerName = 'Lucius_SSJ1';\n  // If none of the above actor ID's match, use this setting.\n  } else {\n    // The filename of the character graphic without the file extension.\n    var charName = 'HaroldSSJ';\n    // The index of the character graphic used.\n    var charIndex = 0;\n    // The filename of the face graphic without the file extension.\n    var faceName = 'HaroldSSJ';\n    // The index of of the face graphic used.\n    var faceIndex = 0;\n    // The filename of the battler graphic without the file extension.\n    var battlerName = 'Harold_SSJ1';\n  }\n  // Changes the character image to the setting applied from above.\n  user.setCharacterImage(charName, charIndex);\n  // Changes the face image to the setting applied from above.\n  user.setFaceImage(faceName, faceIndex);\n  // Changes the battler image from the setting applied from above.\n  user.setBattlerImage(battlerName);\n  // Refreshes the user's appearance.\n  user.refresh();\n}\n</Custom Apply Effect>\n\n<Custom Remove Effect>\n// Retrieve archived settings.\nvar charName = user._prevCharName;\nvar charIndex = user._prevCharIndex;\nvar faceName = user._prevFaceName;\nvar faceIndex = user._prevFaceIndex;\nvar battlerName = user._prevBattlerName;\n// Changes the character image to the archived setting.\nuser.setCharacterImage(charName, charIndex);\n// Changes the face image to the archived setting.\nuser.setFaceImage(faceName, faceIndex);\n// Changes the battler image from the archived setting.\nuser.setBattlerImage(battlerName);\n// Clear archived data.\nuser._priorityCharacterName = undefined;\nuser._priorityCharacterIndex = undefined;\nuser._prevFaceName = undefined;\nuser._prevFaceIndex = undefined;\nuser._priorityFaceName = undefined;\nuser._priorityFaceIndex = undefined;\nuser._prevFaceName = undefined;\nuser._prevFaceIndex = undefined;\nuser._priorityBattlerName = undefined;\nuser._prevBattlerName = undefined;\n// Refreshes the user's appearance.\nuser.refresh();\n</Custom Remove Effect>","overlay":0,"priority":99,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":11,"dataId":2,"value":0.5},{"code":21,"dataId":0,"value":1.5},{"code":21,"dataId":2,"value":1.5},{"code":21,"dataId":3,"value":0.8},{"code":31,"dataId":2,"value":1},{"code":14,"dataId":10,"value":1},{"code":23,"dataId":6,"value":1.5}]},
{"id":14,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[{"code":62,"dataId":2,"value":1},{"code":62,"dataId":1,"value":1}],"iconIndex":81,"maxTurns":1,"message1":"gets ready to protect his allies!","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Defender","note":"","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100},
{"id":15,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":22,"dataId":1,"value":0.3}],"iconIndex":19,"maxTurns":7,"message1":"","message2":"","message3":"","message4":"","minTurns":4,"motion":0,"name":"Adam Evade","note":"","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":16,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":81,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Mana Shield","note":"<Custom React Effect>\nif (value > 0 && this.isHpEffect()) {\n  var mpDmg = Math.floor(value * 0.85);\n  mpDmg = Math.min(mpDmg, target.mp);\n  target.gainMp(-mpDmg);\n  value -= mpDmg;\n  if (target.mp === 0) {\n    target.removeState(16);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":17,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":10,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Dark Mark","note":"<Custom Apply Effect>\ntarget._deathMarkDmg = 0;\n</Custom Apply Effect>\n\n<Custom React Effect>\nif (value > 0 && attacker === origin && this.isHpEffect()) {\n  target._deathMarkDmg += value;\n}\n</Custom React Effect>\n\n<Custom Leave Effect>\ntarget.startAnimation(101);\nvar dmg = Math.round(-0.50 * target._deathMarkDmg);\ntarget.gainHp(dmg);\ntarget._deathMarkDmg = 0;\ntarget.startDamagePopup();\ntarget.clearResult();\n</Custom Leave Effect>","overlay":9,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":18,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Bloodthirsty","note":"<Custom Confirm Effect>\n// Registers the HP value of the user.\nuser._confirmHp = user.hp;\n</Custom Confirm Effect>\n\n<Custom Establish Effect>\n// Check to see if the effect deals damage to HP and is a physical attack.\nif (value > 0 && this.isHpEffect() && this.isPhysical()) {\n  // Check to see if the user is at full HP.\n  if (user.hp === user.mhp) {\n    // Get the user's Life Steal results.\n    var result = user.result();\n    // Get the overheal amount.\n    var overheal = -1 * result.hpDamage + user._confirmHp - user.mhp;\n    // Check if the overheal amount is above 0.\n    if (overheal > 0) {\n      // Adds a barrier to the user based on the overheal amount.\n      user.gainBarrier(overheal, 2);\n    }\n  }\n}\n</Custom Establish Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":19,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Cooling Breeze","note":"<Custom Victory Effect>\n// Set the HP recovery rate to 8%.\nvar rate = 0.08;\n// Determine the HP value to recover.\nvar value = Math.ceil(user.mhp * rate);\n// Gain HP.\nuser.gainHp(value);\n// Set the MP recovery rate to 8%.\nvar rate = 0.08;\n// Determine the MP value to recover.\nvar value = Math.ceil(user.mmp * rate);\n// Gain MP\nuser.gainMp(value);\n</Custom Victory Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":20,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Those Chosen","note":"<Custom React Effect>\n// Check to see if the party is in battle.\nif ($gameParty.inBattle()) {\n  // Sets the flag if the target has more than 1 HP at the time of death.\n  target._secondChance = target.hp > 1;\n}\n</Custom React Effect>\n\n<Custom Respond Effect>\n// Check to see if the party is in battle, has the Second Chance flag, and if the target is dead with 0 HP.\nif ($gameParty.inBattle() && target._secondChance && target.hp <= 0) {\n  // Play the revival animation.\n  target.startAnimation(49);\n  // Set the target's HP to 1.\n  target.setHp(1);\n}\n</Custom Respond Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":21,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":71,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Black String","note":"<Custom Regenerate Effect>\n// Check if the original caster isn't the target and that the original target is alive.\nif (origin !== target && origin.isAlive()) {\n  // Determine the damage dealt.\n  var damage = target.hp / 8;\n  // Round up the damage.\n  damage = Math.ceil(damage);\n  // Cap the damage to 500.\n  damage = Math.min(500, damage);\n  // Play the healing animation on the original caster.\n  origin.startAnimation(46);\n  // Original caster gains HP.\n  origin.gainHp(damage);\n  // Show the HP gained.\n  origin.startDamagePopup();\n  // Clears the original caster's HP popup.\n  origin.clearResult();\n  // Play the poison animation on the target.\n  target.startAnimation(59);\n  // Damage the target's HP.\n  target.gainHp(-damage);\n  // Check if the target is dead.\n  if (target.isDead()) {\n  // If the target is dead, make it collapse.\n    target.performCollapse();\n  }\n}\n</Custom Regenerate Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":22,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Wit's End","note":"<Custom Confirm Effect>\n// Check if the action is a basic attack.\nif (this.isAttack()) {\n  // Calculate the number of turns the user has for MDF buff.\n  var turns = user.buffTurns(5);\n  // Make the minimum number of turns for MDF buff to 3.\n  turns = Math.max(3, turns);\n  // Increase the MDF rate for user.\n  user.addBuff(5, turns);\n  // Calculate the number of turns the target has for MDF buff.\n  var turns = target.buffTurns(5);\n  // Make the minimum number of turns for MDF debuff to 3.\n  turns = Math.max(3, turns);\n  // Decrease the MDF rate for target.\n  target.addDebuff(5, turns);\n  // Calculate the damage dealt.\n  var damage = (user.mat - target.mdf) * 0.40;\n  // Round the damage dealt upward.\n  damage = Math.ceil(damage);\n  // Ensure that the bonus damage has a minimum of 0 damage.\n  value += Math.max(0, damage);\n  // Set the color used for a screen flash.\n  var color = [0, 255, 255, 64];\n  // Set the duration of the screen flash.\n  var duration = 8;\n  // Cause the screen to flash when a basic attack connects.\n  $gameScreen.startFlash(color, duration);\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":23,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":4,"value":4}],"iconIndex":67,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Tsunami Charge","note":"<Custom Apply Effect>\n// Clear the user's current actions.\nuser.clearActions();\n// Create the text for the charging effect.\nvar text = '<CENTER>' + user.name() + ' will unleash \\\\c[4]Tsunami\\\\c[0] in 3 turns.'\n// Insert the line of text into the battle log.\nSceneManager._scene._logWindow._lines.push(text);\n// Create the next line of text.\ntext = '<CENTER>Attack ' + user.name() + ' with \\\\c[6]Lightning\\\\c[0] to cancel it!'\n// Insert the line of text into the battle log.\nSceneManager._scene._logWindow._lines.push(text);\n// Refresh the battle log window to show the added text.\nSceneManager._scene._logWindow.refresh();\n// Get the number of frames to wait.\nvar waitframes = 120;\n// Add a wait action sequence.\nBattleManager._actionList.push(['WAIT', [waitframes]]);\n</Custom Apply Effect>\n\n<Custom Leave Effect>\n// Get the skill ID of the skill that will launch once the charging is complete.\nvar skill = 45;\n// The target's index. -1 for random. -2 for last target.\nvar target = -2;\n// Set the forced action for the user.\n// Queue the forced action.\nBattleManager.queueForceAction(user, skill, target);\n</Custom Leave Effect>\n\n<Custom Respond Effect>\n// Get the element ID of the the attack the target received.\nvar element = this.item().damage.elementId;\n// Check if it is damage based and if the element matches the interrupting element.\nif (this.isDamage() && element === 4) {\n  // Remove this charging state from the target.\n  target.removeState(stateId);\n  // The text used to indicate the charging effect was interrupted.\n  var text = '<CENTER>' + target.name() + \"'s \\\\c[4]Tsunami\\\\c[0] is interrupted!\"\n  // Insert the line of text into the battle log.\n  SceneManager._scene._logWindow._lines.push(text);\n  // Refresh the battle log window to show the added text.\n  SceneManager._scene._logWindow.refresh();\n  // Get the number of frames to wait.\n  var waitframes = 120;\n  // Add a wait action sequence.\n  BattleManager._actionList.push(['WAIT', [waitframes]]);\n}\n</Custom Respond Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100},
{"id":24,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":23,"dataId":4,"value":1.5}],"iconIndex":79,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Heir's Privelege","note":"<Custom Confirm Effect>\nif (this.isMagical() && value !== 0) {\n  value = Math.ceil(value * 1.50);\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":25,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":68,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Earth Shield","note":"<Custom Apply Effect>\n// Get the current 50% value of the caster's MAT upon the state being applied as the Earth Shield Heal value.\ntarget._earthShieldHeal = Math.floor(origin.mat * 0.50);\n// Set the number of charges on the state to 9.\ntarget.setStateCounter(stateId, 9);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\n// When removed, clear the stored heal value.\ntarget._earthShieldHeal = undefined;\n// When removed, clear the number of charges on the state.\ntarget.removeStateCounter(stateId);\n</Custom Remove Effect>\n\n<Custom React Effect>\n// If the received action is an HP effect and if it's a Heal...\nif (this.isHpEffect() && value < 0) {\n  // ...then increase the heal by 20%.\n  value = Math.floor(value * 1.20);\n  // Then reduce the state's charges by -1.\n  target.addStateCounter(stateId, -1);\n  // If the state's charges reach 0 or less...\n  if (target.getStateCounter(stateId) <= 0) {\n    // ...then remove the state.\n    target.removeState(stateId);\n  }\n}\n</Custom React Effect>\n\n<Custom Deselect Effect>\n// Make a copy of the target's results.\nvar result = JsonEx.makeDeepCopy(target.result());\n// Check if the target is alive and if the amount of damage received is above 0.\nif (target.isAlive() && result.hpDamage > 0) {\n  // Set the amount of HP to heal equal to the stored Earth Shield Heal value.\n  var hpHealed = target._earthShieldHeal || 0;\n  // Make the target gain that much HP.\n  target.gainHp(hpHealed);\n  // Show the damage popup on the target.\n  target.startDamagePopup();\n  // Clear the target's results.\n  target.clearResult();\n  // Reduce the state's charges.\n  target.addStateCounter(stateId, -1);\n  // If the state's charges reach 0 or less...\n  if (target.getStateCounter(stateId) <= 0) {\n    // ...then remove the state.\n    target.removeState(stateId);\n  }\n  // Reset the target's results back to what they were before.\n  target._result = result;\n}\n</Custom Deselect Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":26,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":79,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Double Cast","note":"<Custom Action Start Effect>\n// If a chained action is stored...\nif ($gameTemp._chainAction === undefined) {\n  // ...then set the action to the user's current action.\n  $gameTemp._chainAction = user.currentAction();\n} else {\n  // ...then clear the stored action.\n  $gameTemp._chainAction = undefined;\n}\n</Custom Action Start Effect>\n\n<Custom Action End Effect>\n// If a chained action is stored...\nif ($gameTemp._chainAction) {\n  // Set the 'action' variable to the chained action.\n  var action = $gameTemp._chainAction;\n  // Check if the action exists, is a skill, and is a magical attack.\n  if (action && action.isSkill() && action.isMagical()) {\n    // Get the skill used for that action.\n    var skill = action.item();\n    // Check if the user can pay the skill cost.\n    if (user.canPaySkillCost(skill)) {\n      // Check if the battle system is DTB.\n      if (BattleManager.isDTB()) {\n        // If it is, add the action to queue.\n        user.setAction(0, action);\n      // If the battle system isn't DTB...\n      } else {\n        // ...make it a forced forced.\n        BattleManager.queueForceAction(user, skill.id, -2);\n      }\n    }\n  }\n}\n</Custom Action End Effect>\n\n<Custom Remove Effect>\n// Clear the chained action effect.\n$gameTemp._chainAction = undefined;\n</Custom Remove Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":27,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":28,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":29,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":30,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":31,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":32,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":33,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":34,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":35,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":36,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":37,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":38,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":39,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":40,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":41,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":42,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":43,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":44,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":45,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":46,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":47,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":48,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":49,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":50,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100}
]